#!/bin/sh
#
# Generate Makefile rules for entrypoint.sh files from canonical sources
#

set -eu

. "$(dirname "$0")/common.in"

UBUNTU_GOLDEN="docker/entrypoint/ubuntu.sh"
ALPINE_GOLDEN="docker/entrypoint/alpine.sh"

get_bases() {
	local dir df from

	find -P docker -name 'Dockerfile' -o -name 'Dockerfile.in' |
		sed -e 's|/[^/]\+$||' | sort -uV |
		while read dir; do
			df=$(get_dockerfile "$dir")
			if grep -q "^COPY entrypoint.sh" "$df"; then
				from=$(sed -n -e 's:^[ \t]*FROM[ \t]\+\([^ ]\+\).*$:\1:p' "$df")
				echo "$dir${TAB}$from"
			fi
		done
}

get_base_entrypoints() {
	get_bases | while read dir from; do
		# Determine which canonical source to use based on FROM line
		case "$from" in
		*alpine*)
			source=alpine
			;;
		*ubuntu*)
			source=ubuntu
			;;
		*)
			source=unknown
			;;
		esac

		if [ "$source" = unknown ]; then
			echo "$dir: unknown source ($from)" >&2
		else
			echo "$source:$dir/entrypoint.sh"
		fi
	done
}

ENTRYPOINTS=$(get_base_entrypoints)
UBUNTU_ENDPOINTS=$(echo "$ENTRYPOINTS" | sed -n 's/^ubuntu:\(.*\)$/\1/p' | sort -uV)
ALPINE_ENDPOINTS=$(echo "$ENTRYPOINTS" | sed -n 's/^alpine:\(.*\)$/\1/p' | sort -uV)

# Generate Makefile
cat <<EOT
# generated by $0
#
UBUNTU_GOLDEN_ENDPOINT := $UBUNTU_GOLDEN
ALPINE_GOLDEN_ENDPOINT := $ALPINE_GOLDEN

$(list_key UBUNTU_ENDPOINTS $UBUNTU_ENDPOINTS)
$(list_key ALPINE_ENDPOINTS $ALPINE_ENDPOINTS)

.PHONY: entrypoint
entrypoint: \$(UBUNTU_ENDPOINTS) \$(ALPINE_ENDPOINTS)

\$(UBUNTU_ENDPOINTS): \$(UBUNTU_GOLDEN_ENDPOINT)
	@if ! cmp -s \$< \$@; then install -vpm 0755 \$< \$@; else touch \$@; fi

\$(ALPINE_ENDPOINTS): \$(ALPINE_GOLDEN_ENDPOINT)
	@if ! cmp -s \$< \$@; then install -vpm 0755 \$< \$@; else touch \$@; fi
EOT
